
apply plugin: 'kotlin-multiplatform'

apply plugin: 'com.android.application'


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        applicationId "ru.test"
        minSdkVersion 21
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 23
        versionName "1.23"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    configurations {
        androidTestApi {}
        androidTestDebugApi {}
        androidTestReleaseApi {}
        testApi {}
        testDebugApi {}
        testReleaseApi {}
    }

}

kotlin {
    android("android")
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")  \
                           ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            binaries {
                framework()
            }
        }
    }
    // iosArm64("ios") {
    ///   binaries {
    //       framework()
    //   }
    // }
    sourceSets {

        jvm().compilations["main"].defaultSourceSet {
            dependencies {
//                configurations.kapt
//                "kapt"("androidx.room:room-compiler:2.2.6")


            }
        }

        commonMain {

            dependencies {
                implementation kotlin('stdlib-common')
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.7")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0")

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        androidMain {


            dependencies {
                implementation kotlin('stdlib')
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0")


                implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.1.1")

            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
            dependencies {
                //implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.7")
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.7")
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.20.0")
            }
        }
        iosTest {
        }
    }
}


apply 'plugin': 'kotlin-kapt'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.1.1")

}

configurations {
    compileClasspath
}




